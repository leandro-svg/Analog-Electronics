function cirPrintHeader(circuit, varargin)
%CIRPRINTHEADER printing of a header for a circuit that is going to be sized
%
%  CIRPRINTHEADER(CIRCUIT) prints a header for a circuit to the
%  screen. This header contains the title of the circuit, the actual date and
%  time when this function is called, and the name of the user who is calling
%  that function.
%  
%  CIRPRINTHEADER(CIRCUIT, FID) prints the header to the file
%  associated with file identifier FID. FID is an integer file identifier
%  obtained from FOPEN. It can also be 1 for standard output (the screen) or 2
%  for standard error.
%
%  CIRPRINTHEADER(CIRCUIT, FID, SPECS) prints in addition the
%  set of specs of the circuit. The variable SPECS must be a structure. All
%  fields of this structure are printed.
%
% CIRPRINTHEADER(CIRCUIT, FID, SPECS, CHOICES) prints in
% addition the design choices that are made during the sizing of the circuit. 
%  The variable CHOICES must be a structure. All fields of this structure are
%  printed. 
%
%
%  See also FOPEN.
%
%
%  (c) IMEC, 2004
%  IMEC confidential 
%

if (nargin < 1) | (nargin > 4)
  error('Wrong number of arguments');
end

if nargin > 1
  fid = varargin{1};
else
  fid = 1;
end

fprintf(fid, 'Design of %s\n', circuit.title);
fprintf(fid, 'Date: %s\n', datestr(clock, 0));
[a, user] = system('whoami');
fprintf(fid, 'generated by %s\n', user);

if isfield(circuit, 'designkit')
  fprintf(fid, 'designkit: %s\n', circuit.designkit.name);
end

if nargin > 2
  specs = varargin{2}
  fprintf(fid, 'Specifications of the circuit\n');
  fprintf(fid, '******************************\n');
  names = fieldnames(specs);
  for i = 1:length(names)
    if ischar(specs.(names{i}))
      fprintf(fid, '%s\t%s\n', names{i}, specs.(names{i}));
    elseif isnumeric(specs.(names{i}))
      fprintf(fid, '%s\t%s\n', names{i}, eng(specs.(names{i})));
    end
  end
  fprintf(fid, '\n******************************\n\n');
end

if nargin > 3
  choices = varargin{3};
  fprintf(fid, 'Design choices made for the circuit\n');
  fprintf(fid, '************************************\n');
  names = fieldnames(choices);
  for i = 1:length(names)
    if ischar(choices.(names{i}))
      fprintf(fid, '%s\t%s\n', names{i}, choices.(names{i}));
    elseif isnumeric(choices.(names{i}))
      fprintf(fid, '%s\t%s\n', names{i}, eng(choices.(names{i})));
    elseif isstruct(choices.(names{i}))
      names2 = fieldnames(choices.(names{i}));
      for j = 1:length(names2)
	if ischar(choices.(names{i}).(names2{j}))
	  fprintf(fid, '%s.%s\t%s\n', names{i}, names2{j}, ...
	      choices.(names{i}).(names2{j}));
	elseif isnumeric(choices.(names{i}).(names2{j}))
	  fprintf(fid, '%s.%s\t%s\n', names{i}, names2{j}, ...
	      eng(choices.(names{i}).(names2{j})));
	end
      end
    end
  end
  fprintf(fid, '\n******************************\n\n');
end

